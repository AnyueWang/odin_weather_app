{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://odin_weather_app/./src/styles.css","webpack://odin_weather_app/./node_modules/css-loader/dist/runtime/api.js","webpack://odin_weather_app/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://odin_weather_app/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://odin_weather_app/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://odin_weather_app/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://odin_weather_app/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://odin_weather_app/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://odin_weather_app/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://odin_weather_app/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://odin_weather_app/webpack/bootstrap","webpack://odin_weather_app/webpack/runtime/compat get default export","webpack://odin_weather_app/webpack/runtime/define property getters","webpack://odin_weather_app/webpack/runtime/global","webpack://odin_weather_app/webpack/runtime/hasOwnProperty shorthand","webpack://odin_weather_app/webpack/runtime/publicPath","webpack://odin_weather_app/webpack/runtime/jsonp chunk loading","webpack://odin_weather_app/webpack/runtime/nonce","webpack://odin_weather_app/./src/styles.css?44b2","webpack://odin_weather_app/./src/reset.js","webpack://odin_weather_app/./src/app.js","webpack://odin_weather_app/./src/rawdata-processor.js","webpack://odin_weather_app/./node_modules/date-fns/toDate.mjs","webpack://odin_weather_app/./node_modules/date-fns/constructFrom.mjs","webpack://odin_weather_app/./node_modules/date-fns/add.mjs","webpack://odin_weather_app/./node_modules/date-fns/addMonths.mjs","webpack://odin_weather_app/./node_modules/date-fns/addDays.mjs","webpack://odin_weather_app/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://odin_weather_app/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://odin_weather_app/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://odin_weather_app/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://odin_weather_app/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://odin_weather_app/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://odin_weather_app/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://odin_weather_app/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://odin_weather_app/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://odin_weather_app/./node_modules/date-fns/locale/en-US.mjs","webpack://odin_weather_app/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://odin_weather_app/./node_modules/date-fns/constants.mjs","webpack://odin_weather_app/./node_modules/date-fns/startOfDay.mjs","webpack://odin_weather_app/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://odin_weather_app/./node_modules/date-fns/getDayOfYear.mjs","webpack://odin_weather_app/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://odin_weather_app/./node_modules/date-fns/startOfYear.mjs","webpack://odin_weather_app/./node_modules/date-fns/startOfWeek.mjs","webpack://odin_weather_app/./node_modules/date-fns/startOfISOWeek.mjs","webpack://odin_weather_app/./node_modules/date-fns/getISOWeekYear.mjs","webpack://odin_weather_app/./node_modules/date-fns/getISOWeek.mjs","webpack://odin_weather_app/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://odin_weather_app/./node_modules/date-fns/getWeekYear.mjs","webpack://odin_weather_app/./node_modules/date-fns/getWeek.mjs","webpack://odin_weather_app/./node_modules/date-fns/startOfWeekYear.mjs","webpack://odin_weather_app/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://odin_weather_app/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://odin_weather_app/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://odin_weather_app/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://odin_weather_app/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://odin_weather_app/./node_modules/date-fns/isValid.mjs","webpack://odin_weather_app/./node_modules/date-fns/isDate.mjs","webpack://odin_weather_app/./node_modules/date-fns/format.mjs","webpack://odin_weather_app/./src/components.js","webpack://odin_weather_app/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"./resources/fonts/RadioCanadaBig-VariableFont_wght.ttf\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `@font-face {\n    font-family: 'radio-canada-big';\n    src: url(${___CSS_LOADER_URL_REPLACEMENT_0___}) format('truetype');\n}\n\n:root {\n    --lower-layer-background-color: #82D0D9;\n    --middle-layer-background-color: #36B1BF;\n    --upper-layer-background-color: #037F8C;\n    --dark-font-color: #F272A1;\n    --light-font-color: #F299B1;\n    --icon-filter-dark: invert(64%) sepia(37%) saturate(2182%) hue-rotate(298deg) brightness(99%) contrast(91%);\n\n    --font-family: radio-canada-big, Helvetica, Arial, sans-serif;\n    --main-font-size: 30px;\n    --main-font-weight: 600;\n    --main-letter-spacing: 2px;\n    --normal-font-size: 20px;\n    --normal-font-weight: 400;\n    --normal-letter-spacing: 1px;\n}\n\nbody {\n    background-color: var(--lower-layer-background-color);\n    font-family: var(--font-family);\n    text-align: center;\n    font-family: var(--font-family);\n    font-size: var(--normal-font-size);\n    font-weight: var(--normal-font-weight);\n    letter-spacing: var(--normal-letter-spacing);\n    color: var(--light-font-color);\n}\n\n::placeholder {\n    color: var(--dark-font-color);\n    opacity: 0.5;\n}\n\n#search-form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: conter;\n    position: relative;\n}\n\n#content-container {\n    margin-top: 50px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 30px;\n}\n\n#search-container, \n#result-container,\n.error-container {\n    background-color: var(--middle-layer-background-color);\n    width: 600px;\n    padding: 10px 20px;\n    border-radius: 10px;\n}\n\n#search-container {\n    display: flex;\n    gap: 20px;\n    align-items: center;\n    justify-content: center;\n}\n\n#search-btn {\n    background-color: var(--middle-layer-background-color);\n    border: 0;\n}\n\n#search-input {\n    width: 500px;\n    border: 0;\n    background-color: var(--middle-layer-background-color);\n    outline: none;\n    color: var(--light-font-color) !important;\n    font-size: var(--main-font-size);\n    font-family: var(--font-family);\n    font-weight: var(--main-font-weight);\n    letter-spacing: var(--main-letter-spacing);\n}\n\n.function-icon {\n    filter: var(--icon-filter-dark);\n    width: 30px;\n}\n\n#result-container {\n    height: fit-content;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: center;\n    justify-items: center;\n}\n\n.icon-weather-main {\n    width: 160px;\n}\n\n.city-name {\n    font-size: 40px;\n    font-weight: 700;\n    margin-bottom: 0;\n}\n\n.weather-name {\n    font-size: 25px;\n    font-weight: 700;\n    margin-top: 0;\n}\n\n.forecast-title {\n    font-size: 25px;\n    font-weight: 700;\n    color: var(--dark-font-color);\n    justify-self: self-start;\n    grid-column: 1/3;\n}\n\n.forecast-container {\n    grid-column: 1/3;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: 80px;\n    margin-bottom: 40px;\n}\n\n.forecast-content {\n    margin-bottom: 0;\n    margin-top: 0;\n    font-size: 16px;\n}\n\n.icon-weather-forecast {\n    width: 100px;\n}\n\n.search-candidates-container {\n    position: absolute;\n    left: 50px;\n    top: 70px;\n    text-align: left;\n    display: flex;\n    flex-direction: column;\n    gap: 0;\n    background-color: var(--middle-layer-background-color);\n    border-radius: 10px;\n}\n\n.search-candidates-container div {\n    padding: 10px 20px;\n}\n\n.search-candidates-container div:hover {\n    background-color: var(--upper-layer-background-color);\n    border-radius: 10px;\n}\n\n.error-container {\n    font-size: 30px;\n    color: var(--dark-font-color);\n    background-color: var(--upper-layer-background-color);\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,+BAA+B;IAC/B,+DAAqF;AACzF;;AAEA;IACI,uCAAuC;IACvC,wCAAwC;IACxC,uCAAuC;IACvC,0BAA0B;IAC1B,2BAA2B;IAC3B,2GAA2G;;IAE3G,6DAA6D;IAC7D,sBAAsB;IACtB,uBAAuB;IACvB,0BAA0B;IAC1B,wBAAwB;IACxB,yBAAyB;IACzB,4BAA4B;AAChC;;AAEA;IACI,qDAAqD;IACrD,+BAA+B;IAC/B,kBAAkB;IAClB,+BAA+B;IAC/B,kCAAkC;IAClC,sCAAsC;IACtC,4CAA4C;IAC5C,8BAA8B;AAClC;;AAEA;IACI,6BAA6B;IAC7B,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;AACb;;AAEA;;;IAGI,sDAAsD;IACtD,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,sDAAsD;IACtD,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,SAAS;IACT,sDAAsD;IACtD,aAAa;IACb,yCAAyC;IACzC,gCAAgC;IAChC,+BAA+B;IAC/B,oCAAoC;IACpC,0CAA0C;AAC9C;;AAEA;IACI,+BAA+B;IAC/B,WAAW;AACf;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,qBAAqB;AACzB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,6BAA6B;IAC7B,wBAAwB;IACxB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,kCAAkC;IAClC,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,eAAe;AACnB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,SAAS;IACT,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,MAAM;IACN,sDAAsD;IACtD,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,qDAAqD;IACrD,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,6BAA6B;IAC7B,qDAAqD;AACzD\",\"sourcesContent\":[\"@font-face {\\n    font-family: 'radio-canada-big';\\n    src: url('./resources/fonts/RadioCanadaBig-VariableFont_wght.ttf') format('truetype');\\n}\\n\\n:root {\\n    --lower-layer-background-color: #82D0D9;\\n    --middle-layer-background-color: #36B1BF;\\n    --upper-layer-background-color: #037F8C;\\n    --dark-font-color: #F272A1;\\n    --light-font-color: #F299B1;\\n    --icon-filter-dark: invert(64%) sepia(37%) saturate(2182%) hue-rotate(298deg) brightness(99%) contrast(91%);\\n\\n    --font-family: radio-canada-big, Helvetica, Arial, sans-serif;\\n    --main-font-size: 30px;\\n    --main-font-weight: 600;\\n    --main-letter-spacing: 2px;\\n    --normal-font-size: 20px;\\n    --normal-font-weight: 400;\\n    --normal-letter-spacing: 1px;\\n}\\n\\nbody {\\n    background-color: var(--lower-layer-background-color);\\n    font-family: var(--font-family);\\n    text-align: center;\\n    font-family: var(--font-family);\\n    font-size: var(--normal-font-size);\\n    font-weight: var(--normal-font-weight);\\n    letter-spacing: var(--normal-letter-spacing);\\n    color: var(--light-font-color);\\n}\\n\\n::placeholder {\\n    color: var(--dark-font-color);\\n    opacity: 0.5;\\n}\\n\\n#search-form {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: conter;\\n    position: relative;\\n}\\n\\n#content-container {\\n    margin-top: 50px;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 30px;\\n}\\n\\n#search-container, \\n#result-container,\\n.error-container {\\n    background-color: var(--middle-layer-background-color);\\n    width: 600px;\\n    padding: 10px 20px;\\n    border-radius: 10px;\\n}\\n\\n#search-container {\\n    display: flex;\\n    gap: 20px;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n#search-btn {\\n    background-color: var(--middle-layer-background-color);\\n    border: 0;\\n}\\n\\n#search-input {\\n    width: 500px;\\n    border: 0;\\n    background-color: var(--middle-layer-background-color);\\n    outline: none;\\n    color: var(--light-font-color) !important;\\n    font-size: var(--main-font-size);\\n    font-family: var(--font-family);\\n    font-weight: var(--main-font-weight);\\n    letter-spacing: var(--main-letter-spacing);\\n}\\n\\n.function-icon {\\n    filter: var(--icon-filter-dark);\\n    width: 30px;\\n}\\n\\n#result-container {\\n    height: fit-content;\\n    display: grid;\\n    grid-template-columns: 1fr 1fr;\\n    align-items: center;\\n    justify-items: center;\\n}\\n\\n.icon-weather-main {\\n    width: 160px;\\n}\\n\\n.city-name {\\n    font-size: 40px;\\n    font-weight: 700;\\n    margin-bottom: 0;\\n}\\n\\n.weather-name {\\n    font-size: 25px;\\n    font-weight: 700;\\n    margin-top: 0;\\n}\\n\\n.forecast-title {\\n    font-size: 25px;\\n    font-weight: 700;\\n    color: var(--dark-font-color);\\n    justify-self: self-start;\\n    grid-column: 1/3;\\n}\\n\\n.forecast-container {\\n    grid-column: 1/3;\\n    display: grid;\\n    grid-template-columns: 1fr 1fr 1fr;\\n    gap: 80px;\\n    margin-bottom: 40px;\\n}\\n\\n.forecast-content {\\n    margin-bottom: 0;\\n    margin-top: 0;\\n    font-size: 16px;\\n}\\n\\n.icon-weather-forecast {\\n    width: 100px;\\n}\\n\\n.search-candidates-container {\\n    position: absolute;\\n    left: 50px;\\n    top: 70px;\\n    text-align: left;\\n    display: flex;\\n    flex-direction: column;\\n    gap: 0;\\n    background-color: var(--middle-layer-background-color);\\n    border-radius: 10px;\\n}\\n\\n.search-candidates-container div {\\n    padding: 10px 20px;\\n}\\n\\n.search-candidates-container div:hover {\\n    background-color: var(--upper-layer-background-color);\\n    border-radius: 10px;\\n}\\n\\n.error-container {\\n    font-size: 30px;\\n    color: var(--dark-font-color);\\n    background-color: var(--upper-layer-background-color);\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","const removePreviousCadidates = () => {\n    const previousCandidates = document.querySelector('.search-candidates-container')\n    if (previousCandidates) {\n        previousCandidates.remove()\n    }\n}\n\nconst removePreviousError = () => {\n    const previousError = document.querySelector('.error-container')\n    if (previousError) {\n        previousError.remove()\n    }\n}\n\nconst removePreviousResult = () => {\n    const preResultDiv = document.getElementById('result-container')\n    if (preResultDiv) {\n        preResultDiv.remove()\n    }\n}\n\nexport default {\n    removePreviousCadidates,\n    removePreviousError,\n    removePreviousResult,\n}","const baseUrl = 'https://api.weatherapi.com/v1'\n\nconst search = async (str) => {\n    const res = await fetch(`${baseUrl}/search.json?key=${process.env.API_KEY}&q=${str}`, { mode: 'cors' })\n    return await res.json()\n}\n\nconst get = async (city) => {\n    const res = await fetch(`${baseUrl}/forecast.json?key=${process.env.API_KEY}&q=${city}&days=3`, { mode: 'cors' })\n    return await res.json()\n}\n\nexport default {\n    search,\n    get\n}","const processCandidateData = (rawData) => {\n    const data = []\n    rawData.forEach(eachCity => {\n        const info = `${eachCity.name || ''}, ${eachCity.region || ''}, ${eachCity.country || ''}`\n        data.push(info)\n    })\n    return data\n}\n\nconst processWeatherData = (rawData) => {\n    const forecastData = []\n    rawData.forecast.forecastday.forEach(eachDayData => {\n        const lastHourData = eachDayData.hour.at(12)\n        const requiredData = {\n            weatherIconSrc: lastHourData.condition.icon.replace('64x64', '128x128'),\n            maxtemp_c: eachDayData.day.maxtemp_c,\n            mintemp_c: eachDayData.day.mintemp_c,\n            weatherText: lastHourData.condition.text,\n        }\n        forecastData.push(requiredData)\n    });\n    return {\n        city: rawData.location.name,\n        region: rawData.location.region,\n        country: rawData.location.country,\n        weatherIconSrc: rawData.current.condition.icon.replace('64x64', '128x128'),\n        temp_c: rawData.current.temp_c,\n        weatherText: rawData.current.condition.text,\n        localtime: rawData.location.localtime,\n        forecast: forecastData,\n    }\n}\n\nexport default {\n    processCandidateData,\n    processWeatherData\n}","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { addDays } from \"./addDays.mjs\";\nimport { addMonths } from \"./addMonths.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be added.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns The new date with the seconds added\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\\\\-7\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport function add(date, duration) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n  } = duration;\n\n  // Add years and months\n  const _date = toDate(date);\n  const dateWithMonths =\n    months || years ? addMonths(_date, months + years * 12) : _date;\n\n  // Add weeks and days\n  const dateWithDays =\n    days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths;\n\n  // Add days, hours, minutes and seconds\n  const minutesToAdd = minutes + hours * 60;\n  const secondsToAdd = seconds + minutesToAdd * 60;\n  const msToAdd = secondsToAdd * 1000;\n  const finalDate = constructFrom(date, dateWithDays.getTime() + msToAdd);\n\n  return finalDate;\n}\n\n// Fallback for modularized imports:\nexport default add;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { format, add } from 'date-fns'\n\nconst generateCandidateDiv = (data, handleEachResult) => {\n    const candidateDiv = document.createElement('div')\n    candidateDiv.classList.add('search-candidates-container')\n    data.forEach(eachCity => {\n        const cityDiv = document.createElement('div')\n        cityDiv.textContent = eachCity\n        candidateDiv.appendChild(cityDiv)\n\n        cityDiv.addEventListener('click', async (event) => {\n            await handleEachResult(event)\n        })\n    })\n    return candidateDiv\n}\n\nconst generateWeatherDiv = (data,) => {\n    const resultDiv = document.createElement('div')\n    resultDiv.setAttribute('id', 'result-container')\n\n    const weatherDiv = document.createElement('div')\n    const weatherIcon = new Image()\n    weatherIcon.src = data.weatherIconSrc\n    weatherIcon.classList.add('icon-weather-main')\n    const weatherP = document.createElement('p')\n    weatherP.textContent = `${data.weatherText}, ${data.temp_c} °C`\n    weatherP.classList.add('weather-name')\n    weatherDiv.appendChild(weatherIcon)\n    weatherDiv.appendChild(weatherP)\n    resultDiv.appendChild(weatherDiv)\n\n    const basicDiv = document.createElement('div')\n    const cityP = document.createElement('p')\n    cityP.textContent = data.city\n    cityP.classList.add('city-name')\n    const countryP = document.createElement('p')\n    countryP.textContent = `${data.region}, ${data.country}`\n    const timeP = document.createElement('p')\n    timeP.textContent = data.localtime\n    basicDiv.appendChild(cityP)\n    basicDiv.appendChild(countryP)\n    basicDiv.appendChild(timeP)\n    resultDiv.appendChild(basicDiv)\n\n    const forecastP = document.createElement('p')\n    forecastP.textContent = 'Forecast:'\n    forecastP.classList.add('forecast-title')\n    resultDiv.appendChild(forecastP)\n\n    const forecastDiv = document.createElement('div')\n    forecastDiv.classList.add('forecast-container')\n    const dateArray = data.localtime.split(' ')[0].split('-')\n    const today = new Date(dateArray[0], Number(dateArray[1]) - 1, dateArray[2])\n    data.forecast.forEach((eachDayForecast, idx) => {\n        const eachDate = add(today, { days: idx })\n        const eachDiv = document.createElement('div')\n\n        const eachDateP = document.createElement('p')\n        eachDateP.textContent = format(eachDate, 'MM/dd EEE')\n        eachDateP.classList.add('forecast-content')\n        eachDiv.appendChild(eachDateP)\n\n        const eachWeatherIcon = new Image()\n        eachWeatherIcon.src = eachDayForecast.weatherIconSrc\n        eachWeatherIcon.classList.add('icon-weather-forecast')\n        eachDiv.appendChild(eachWeatherIcon)\n\n        const eachWeatherP = document.createElement('p')\n        eachWeatherP.textContent = eachDayForecast.weatherText\n        eachWeatherP.classList.add('forecast-content')\n        eachDiv.appendChild(eachWeatherP)\n\n        const eachTempP = document.createElement('p')\n        eachTempP.textContent = `${eachDayForecast.maxtemp_c} - ${eachDayForecast.mintemp_c} °C`\n        eachTempP.classList.add('forecast-content')\n        eachDiv.appendChild(eachTempP)\n\n        forecastDiv.appendChild(eachDiv)\n    })\n    resultDiv.appendChild(forecastDiv)\n    return resultDiv\n}\n\nconst generateErrorDiv = (message) => {\n    const errorDiv = document.createElement('div')\n    errorDiv.classList.add('error-container')\n    errorDiv.textContent = `ERROR: ${message}`\n    return errorDiv\n}\n\nexport default {\n    generateCandidateDiv,\n    generateWeatherDiv,\n    generateErrorDiv,\n}","import './styles.css'\nimport reset from './reset'\nimport app from './app'\nimport rawdataProcessor from './rawdata-processor'\nimport components from './components'\n\nconst btnSearch = document.getElementById('search-btn')\nconst inputSearch = document.getElementById('search-input')\nconst contentDiv = document.getElementById('content-container')\nconst searchForm = document.getElementById('search-form')\n\ninputSearch.addEventListener('keydown', searchInput)\nbtnSearch.addEventListener('click', searchWeather)\n\nasync function searchInput(event) {\n    reset.removePreviousCadidates()\n    reset.removePreviousError()\n    if (event.key === 'Enter') return\n    const currentStr = event.key.length === 1\n        ? event.target.value + event.key\n        : (\n            event.key === 'Backspace' && event.target.value.length !== 0\n                ? event.target.value.slice(0, -1)\n                : event.target.value\n        )\n    if (currentStr.length <= 2) return\n    try {\n        const rawData = await app.search(currentStr)\n        if (rawData.length == 0) return\n        const data = rawdataProcessor.processCandidateData(rawData)\n        if (data) {\n            const candidateDiv = components.generateCandidateDiv(data, searchWeather)\n            searchForm.appendChild(candidateDiv)\n        }\n    } catch (error) {\n        handleError(error)\n    }\n}\n\nasync function searchWeather(event) {\n    event.preventDefault()\n    reset.removePreviousCadidates()\n    reset.removePreviousError()\n    reset.removePreviousResult()\n    const city = inputSearch.value.toLowerCase()\n    inputSearch.value = ''\n    try {\n        const rawData = await app.get(city)\n        if (rawData.error) {\n            const errorCode = rawData.error.code\n            switch (errorCode) {\n                case 1003:\n                    throw new Error('The city name should not be empty!')\n                case 1006:\n                    throw new Error('The city name does not exist!')\n                default:\n                    break;\n            }\n        }\n        const data = rawdataProcessor.processWeatherData(rawData)\n        const resultDiv = components.generateWeatherDiv(data)\n        contentDiv.appendChild(resultDiv)\n    } catch (error) {\n        handleError(error)\n    }\n}\n\nfunction handleError(error) {\n    reset.removePreviousCadidates()\n    reset.removePreviousError()\n    const errorDiv = components.generateErrorDiv(error.message)\n    contentDiv.appendChild(errorDiv)\n}\n"],"names":["___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","url","options","String","__esModule","default","test","slice","hash","needQuotes","replace","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","src","scripts","getElementsByTagName","p","b","baseURI","self","href","nc","locals","removePreviousCadidates","previousCandidates","removePreviousError","previousError","removePreviousResult","preResultDiv","getElementById","baseUrl","async","str","res","fetch","mode","json","city","rawData","forEach","eachCity","info","name","region","country","forecastData","forecast","forecastday","eachDayData","lastHourData","hour","at","requiredData","weatherIconSrc","condition","icon","maxtemp_c","day","mintemp_c","weatherText","text","current","temp_c","localtime","toDate","argument","argStr","Date","constructor","NaN","constructFrom","date","value","add","duration","years","months","weeks","days","hours","minutes","seconds","_date","dateWithMonths","amount","isNaN","dayOfMonth","getDate","endOfDesiredMonth","getTime","setMonth","getMonth","setFullYear","getFullYear","addMonths","msToAdd","setDate","addDays","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","localize","ordinalNumber","dirtyNumber","_options","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","predicate","findIndex","object","findKey","valueCallback","rest","parsePattern","parseInt","parseResult","any","enUS","code","formatDistance","token","tokenValue","addSuffix","comparison","formatRelative","_baseDate","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","millisecondsInDay","startOfDay","setHours","getTimezoneOffsetInMilliseconds","utcDate","UTC","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","getDayOfYear","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","differenceInCalendarDays","cleanDate","startOfYear","startOfWeek","locale","getDay","diff","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","dayPeriodEnumValue","toUpperCase","h","H","s","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","B","K","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","delimiter","sign","absOffset","dateLongFormatter","pattern","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isValid","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","cleanEscapedString","input","matched","generateCandidateDiv","handleEachResult","candidateDiv","classList","cityDiv","textContent","addEventListener","event","generateWeatherDiv","resultDiv","weatherDiv","weatherIcon","Image","weatherP","basicDiv","cityP","countryP","timeP","forecastP","forecastDiv","dateArray","split","eachDayForecast","idx","eachDate","eachDiv","eachDateP","formatStr","originalDate","RangeError","parts","substring","firstCharacter","longFormatter","isToken","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","format","_message","subject","message","console","warn","includes","warnOrThrowProtectedError","formatter","eachWeatherIcon","eachWeatherP","eachTempP","generateErrorDiv","errorDiv","btnSearch","inputSearch","contentDiv","searchForm","searchWeather","preventDefault","app","error","components","handleError","currentStr"],"sourceRoot":""}